#!/usr/bin/env python3
import argparse
import getpass
import logging
import os
import sys
import time

PROG_NAME = os.path.basename(__file__)

parser = argparse.ArgumentParser(
    prog=PROG_NAME,
    description="Fake lego",
)
parser.add_argument(
    "--host",
    help="host FQDN of the target site",
)
parser.add_argument(
    "--endpoint",
    help="endpoint URL for GitHub Management API (ex: https://example.com:8443/manage)",
)
parser.add_argument(
    "--user",
    default=os.environ.get("API_USER"),
    help="user name for GitHub Management API",
)
parser.add_argument(
    "--password",
    default=os.environ.get("API_PASSORD"),
    help="password for GitHub Management API",
)
parser.add_argument(
    "--cert",
    help="path to the certificate file",
)
parser.add_argument(
    "--key",
    help="path to the key file",
)
args = parser.parse_args()

logging.basicConfig(
    level=logging.INFO,
)

for i, arg in enumerate(sys.argv):
    logging.info(f"{i}: {arg}")
logging.info(f"args={args}")

isatty = sys.stdin.isatty()
logging.info(f"isatty={isatty}")

api_user = args.user
if api_user is None:
    api_user = sys.stdin.readline().strip()
    logging.info(f"using api_user={api_user} read from stdin")
else:
    logging.info(f"using api_user={api_user} specified with option")

api_password = args.password
if api_password is None:
    api_password = sys.stdin.readline().strip()

for i in range(5):
    logging.info(f"fake setting certificate")
    time.sleep(1)

logging.info(f"fake finshed setting certificate")
